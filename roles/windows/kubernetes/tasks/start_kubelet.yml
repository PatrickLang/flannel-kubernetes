---
- name: Kubernetes | Create kubernetes dir
  win_file:
    path: "{{ download_info.install_path }}"
    state: directory

- name: Kubernetes | get kubernetes binaries
  win_copy:
    src: "{{ansible_tmp_dir}}/{{item}}"
    dest: "{{ download_info.install_path }}/{{item}}"
  with_items:
    - kubectl.exe
    - kubelet.exe
    - kube-proxy.exe
- name: Kubelet | Delete kubeconfig
  win_file:
    path: "{{ install_path }}/kubeconfig.yaml"
    state: absent

- name: Kubelet | Create kubeconfig
  win_lineinfile:
    path: "{{ install_path }}/kubeconfig.yaml"
    create: yes
    line: |
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          server: http://{{ kubernetes_info.MASTER_IP }}:8080
      users:
      - name: kubelet
      contexts:
      - context:
          cluster: local
          user: kubelet
        name: kubelet-context
      current-context: kubelet-context
    newline: unix

- name: Kubelet | Set kubectl context
  win_shell: |
    $ErrorActionPreference = "Stop"
    {{ install_path }}\\kubectl.exe config set-cluster default-cluster --server={{ kubernetes_info.MASTER_IP }}:8080
    if($LASTEXITCODE) {
        Throw "Failed to run kubectl.exe config set-cluster"
    }
    {{ install_path }}\\kubectl.exe config set-context local --cluster=default-cluster --user=default-admin
    if($LASTEXITCODE) {
        Throw "Failed to run kubectl.exe config set-context"
    }
    {{ install_path }}\\kubectl.exe config use-context local
    if($LASTEXITCODE) {
        Throw "Failed to run kubectl.exe config use-context"
    }

- name: Kubernetes | run flannel script 1
  win_shell: |
    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    wget https://github.com/Microsoft/SDN/archive/master.zip -o master.zip
    Expand-Archive master.zip -DestinationPath master
    mv master/SDN-master/Kubernetes/flannel/l2bridge/* C:/k/
    rm -recurse -force master,master.zip

- name: Kubernetes | set kubeconfig
  win_environment:
    state: present
    name: 'KUBECONFIG'
    value: 'C:\k\config'
    level: user

- name: Kubernetes | download start.ps1
  win_get_url:
    url: https://raw.githubusercontent.com/papagalu/custom-flannel-startscript/master/start.ps1
    dest: C:\k\start.ps1

- name: Kubernetes | copy config
  win_copy:
    src: C:\Users\Administrator\.kube\config
    dest: C:\k\config
    remote_src: yes

- name: Kubernetes | pull docker image
  win_shell: |
    docker pull mcr.microsoft.com/windows/nanoserver:1809
    docker tag mcr.microsoft.com/windows/nanoserver:1809 microsoft/nanoserver:latest

- name: Kubernetes | start flannel
  win_shell: |
    cd C:\k
    chcp 65001
    .\start.ps1 -ManagementIP {{ MASTER_IP }} -ClusterCIDR {{ CLUSTER_SUBNET }} -ServiceCIDR {{ SERVICE_CLUSTER_IP_RANGE }} -KubeDnsServiceIP {{ K8S_DNS_SERVICE_IP }}
